{"file":"C:\\Users\\josea\\Documents\\wordle\\src\\Contexts\\levita\\Games\\application\\GameCreator.ts","mappings":";;;;;;;;;;;;AAKA,MAAa,WAAW;IAItB,YAAY,UAA0B,EAAE,oBAA0C;QAChF,oCAAoC;QACpC,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;IACnD,CAAC;IAEK,IAAI,CAAC,OAAwB;;YACjC,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;YAEzB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAA;YAE3D,OAAO,CAAC,GAAG,CAAC,iEAAiE,EAAE,IAAI,EAAE,SAAS,CAAC,CAAA;QAGjG,CAAC;KAAA;CACF;AAlBD,kCAkBC","names":[],"sources":["C:\\Users\\josea\\Documents\\wordle\\src\\Contexts\\levita\\Games\\application\\GameCreator.ts"],"sourcesContent":["\r\nimport { WordPickerRepository } from 'Contexts/levita/WordPickers/domain/WordPickerRepository';\r\nimport { GameRepository } from '../domain/GameRepository';\r\nimport { WordUserRequest } from './WordUserRequest';\r\n\r\nexport class GameCreator {\r\n  // private gameRepository: GameRepository;\r\n  private wordPickerRepository: WordPickerRepository;\r\n\r\n  constructor(repository: GameRepository, wordPickerRepository: WordPickerRepository) {\r\n    // this.gameRepository = repository;\r\n    this.wordPickerRepository = wordPickerRepository;\r\n  }\r\n\r\n  async play(request: WordUserRequest): Promise<void> {\r\n    const { word } = request;\r\n\r\n    const guessWord = await this.wordPickerRepository.getLast()\r\n\r\n    console.log(\"ðŸš€ ~ file: GameCreator.ts ~ line 16 ~ GameCreator ~ play ~ word\", word, guessWord)\r\n    \r\n\r\n  }\r\n}\r\n"],"version":3}