{"file":"C:\\Users\\josea\\Documents\\wordle\\tests\\contexts\\levita\\Games\\__mocks__\\GameRepositoryMock.ts","mappings":";;;;;;;;;;;;AACA,+EAA2E;AAI3E,MAAa,kBAAkB;IAA/B;QACS,aAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;IAuB7B,CAAC;IArBA,qBAAqB,CAAC,QAAc;QACnC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAA;QAC/B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAS,CAAA;QAClE,MAAM,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,WAAI,CAAC,CAAA;IAC3C,CAAC;IAEK,MAAM,CAAC,IAAU;;YACtB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;QAC3B,CAAC;KAAA;IAEK,OAAO,CAAC,EAAU;;YACvB,OAAO,IAAI,CAAA;QACZ,CAAC;KAAA;IAEK,IAAI;;YACT,OAAO,EAAE,CAAA;QACV,CAAC;KAAA;IAEK,SAAS,CAAC,EAAU;8DAAkB,CAAC;KAAA;IAEvC,MAAM,CAAC,EAAU,EAAE,IAAU;8DAAkB,CAAC;KAAA;CACtD;AAxBD,gDAwBC","names":[],"sources":["C:\\Users\\josea\\Documents\\wordle\\tests\\contexts\\levita\\Games\\__mocks__\\GameRepositoryMock.ts"],"sourcesContent":["import { GameRepository } from '../../../../../src/contexts/levita/Games/domain/GameRepository'\r\nimport { Game } from '../../../../../src/contexts/levita/Games/domain/Game'\r\nimport { GameId } from '../../../../../src/contexts/levita/shared/domain/Games/GameId'\r\nimport { Nullable } from '../../../../../src/contexts/shared/domain/Nullable'\r\n\r\nexport class GameRepositoryMock implements GameRepository {\r\n\tprivate mockSave = jest.fn()\r\n\r\n\tassertLastSavedGameIs(expected: Game): void {\r\n\t\tconst mock = this.mockSave.mock\r\n\t\tconst lastSavedGame = mock.calls[mock.calls.length - 1][0] as Game\r\n\t\texpect(lastSavedGame).toBeInstanceOf(Game)\r\n\t}\r\n\r\n\tasync create(game: Game): Promise<void> {\r\n\t\treturn this.mockSave(game)\r\n\t}\r\n\r\n\tasync findOne(id: GameId): Promise<Nullable<Game>> {\r\n\t\treturn null\r\n\t}\r\n\r\n\tasync find(): Promise<Nullable<Game[]>> {\r\n\t\treturn []\r\n\t}\r\n\r\n\tasync deleteOne(id: GameId): Promise<void> {}\r\n\r\n\tasync update(id: GameId, game: Game): Promise<void> {}\r\n}\r\n"],"version":3}