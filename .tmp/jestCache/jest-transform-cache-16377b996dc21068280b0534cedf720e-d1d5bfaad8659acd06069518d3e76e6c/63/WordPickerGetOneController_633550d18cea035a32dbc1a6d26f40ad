6e12c5090fac2c4ddf81b2c528ccf6f4
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WordPickerGetOneController = void 0;
const http_status_1 = __importDefault(require("http-status"));
class WordPickerGetOneController {
    constructor(wordPickerCreator) {
        this.wordPickerCreator = wordPickerCreator;
    }
    map(input) {
        const inmutableObject = Object.assign({}, input);
        inmutableObject.id = inmutableObject._id;
        delete inmutableObject._id;
        return inmutableObject;
    }
    run(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const wordPicker = yield this.wordPickerCreator.getWordPicker();
                if (wordPicker === null) {
                    res.status(http_status_1.default.NOT_FOUND);
                    return;
                }
                const wordPickerDTO = yield this.map(wordPicker);
                res.status(http_status_1.default.OK).json(wordPickerDTO);
            }
            catch (error) {
                res.status(http_status_1.default.INTERNAL_SERVER_ERROR).send();
            }
        });
    }
}
exports.WordPickerGetOneController = WordPickerGetOneController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxqb3NlYVxcRG9jdW1lbnRzXFx3b3JkbGVcXHNyY1xcYXBwc1xcbGV2aXRhXFxiYWNrZW5kXFxjb250cm9sbGVyc1xcV29yZFBpY2tlcnNcXFdvcmRQaWNrZXJHZXRPbmVDb250cm9sbGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUNBLDhEQUFvQztBQU9wQyxNQUFhLDBCQUEwQjtJQUN0QyxZQUFvQixpQkFBb0M7UUFBcEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtJQUFHLENBQUM7SUFFNUQsR0FBRyxDQUFDLEtBQVU7UUFDYixNQUFNLGVBQWUscUJBQVEsS0FBSyxDQUFFLENBQUE7UUFDcEMsZUFBZSxDQUFDLEVBQUUsR0FBRyxlQUFlLENBQUMsR0FBRyxDQUFBO1FBQ3hDLE9BQU8sZUFBZSxDQUFDLEdBQUcsQ0FBQTtRQUMxQixPQUFPLGVBQWUsQ0FBQTtJQUN2QixDQUFDO0lBRUssR0FBRyxDQUFDLEdBQTBCLEVBQUUsR0FBYTs7WUFDbEQsSUFBSTtnQkFDSCxNQUFNLFVBQVUsR0FBRyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLEVBQUUsQ0FBQTtnQkFFL0QsSUFBSSxVQUFVLEtBQUssSUFBSSxFQUFFO29CQUN4QixHQUFHLENBQUMsTUFBTSxDQUFDLHFCQUFVLENBQUMsU0FBUyxDQUFDLENBQUE7b0JBQ2hDLE9BQU07aUJBQ047Z0JBQ0QsTUFBTSxhQUFhLEdBQUcsTUFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFBO2dCQUVoRCxHQUFHLENBQUMsTUFBTSxDQUFDLHFCQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFBO2FBQzdDO1lBQUMsT0FBTyxLQUFLLEVBQUU7Z0JBQ2YsR0FBRyxDQUFDLE1BQU0sQ0FBQyxxQkFBVSxDQUFDLHFCQUFxQixDQUFDLENBQUMsSUFBSSxFQUFFLENBQUE7YUFDbkQ7UUFDRixDQUFDO0tBQUE7Q0FDRDtBQXpCRCxnRUF5QkMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxqb3NlYVxcRG9jdW1lbnRzXFx3b3JkbGVcXHNyY1xcYXBwc1xcbGV2aXRhXFxiYWNrZW5kXFxjb250cm9sbGVyc1xcV29yZFBpY2tlcnNcXFdvcmRQaWNrZXJHZXRPbmVDb250cm9sbGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcydcbmltcG9ydCBodHRwU3RhdHVzIGZyb20gJ2h0dHAtc3RhdHVzJ1xuaW1wb3J0IHsgV29yZFBpY2tlckNyZWF0b3IgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb250ZXh0cy9sZXZpdGEvV29yZFBpY2tlcnMvYXBwbGljYXRpb24vV29yZFBpY2tlckNyZWF0b3InXG5pbXBvcnQgeyBDb250cm9sbGVyIH0gZnJvbSAnLi4vQ29udHJvbGxlcidcblxudHlwZSBXb3JkUGlja2VyUG9zdFJlcXVlc3QgPSBSZXF1ZXN0ICYge1xuXHRib2R5OiB7fVxufVxuZXhwb3J0IGNsYXNzIFdvcmRQaWNrZXJHZXRPbmVDb250cm9sbGVyIGltcGxlbWVudHMgQ29udHJvbGxlciB7XG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgd29yZFBpY2tlckNyZWF0b3I6IFdvcmRQaWNrZXJDcmVhdG9yKSB7fVxuXG5cdG1hcChpbnB1dDogYW55KSB7XG5cdFx0Y29uc3QgaW5tdXRhYmxlT2JqZWN0ID0geyAuLi5pbnB1dCB9XG5cdFx0aW5tdXRhYmxlT2JqZWN0LmlkID0gaW5tdXRhYmxlT2JqZWN0Ll9pZFxuXHRcdGRlbGV0ZSBpbm11dGFibGVPYmplY3QuX2lkXG5cdFx0cmV0dXJuIGlubXV0YWJsZU9iamVjdFxuXHR9XG5cblx0YXN5bmMgcnVuKHJlcTogV29yZFBpY2tlclBvc3RSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKSB7XG5cdFx0dHJ5IHtcblx0XHRcdGNvbnN0IHdvcmRQaWNrZXIgPSBhd2FpdCB0aGlzLndvcmRQaWNrZXJDcmVhdG9yLmdldFdvcmRQaWNrZXIoKVxuXG5cdFx0XHRpZiAod29yZFBpY2tlciA9PT0gbnVsbCkge1xuXHRcdFx0XHRyZXMuc3RhdHVzKGh0dHBTdGF0dXMuTk9UX0ZPVU5EKVxuXHRcdFx0XHRyZXR1cm5cblx0XHRcdH1cblx0XHRcdGNvbnN0IHdvcmRQaWNrZXJEVE8gPSBhd2FpdCB0aGlzLm1hcCh3b3JkUGlja2VyKVxuXG5cdFx0XHRyZXMuc3RhdHVzKGh0dHBTdGF0dXMuT0spLmpzb24od29yZFBpY2tlckRUTylcblx0XHR9IGNhdGNoIChlcnJvcikge1xuXHRcdFx0cmVzLnN0YXR1cyhodHRwU3RhdHVzLklOVEVSTkFMX1NFUlZFUl9FUlJPUikuc2VuZCgpXG5cdFx0fVxuXHR9XG59XG4iXSwidmVyc2lvbiI6M30=