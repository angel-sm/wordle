{"file":"C:\\Users\\josea\\Documents\\wordle\\tests\\contexts\\shared\\infrastructure\\MongoClientFactory.test.ts","mappings":";;;;;;;;;;;AAAA,4HAAwH;AACxH,qCAAqC;AAErC,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IACnC,MAAM,OAAO,GAAG,uCAAkB,CAAA;IAClC,IAAI,MAAmB,CAAA;IAEvB,UAAU,CAAC,GAAS,EAAE;QACrB,MAAM,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,gDAAgD,EAAE,CAAC,CAAA;IACvG,CAAC,CAAA,CAAC,CAAA;IAEF,SAAS,CAAC,GAAS,EAAE;QACpB,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;IACrB,CAAC,CAAA,CAAC,CAAA;IAEF,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;QACvE,MAAM,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,qBAAW,CAAC,CAAA;IAC3C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wEAAwE,EAAE,GAAS,EAAE;QACvF,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,gDAAgD,EAAE,CAAC,CAAA;QAEhH,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAElC,MAAM,SAAS,CAAC,KAAK,EAAE,CAAA;IACxB,CAAC,CAAA,CAAC,CAAA;IAEF,EAAE,CAAC,uCAAuC,EAAE,GAAS,EAAE;QACtD,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,gDAAgD,EAAE,CAAC,CAAA;QAE/G,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAE9B,MAAM,SAAS,CAAC,KAAK,EAAE,CAAA;IACxB,CAAC,CAAA,CAAC,CAAA;AACH,CAAC,CAAC,CAAA","names":[],"sources":["C:\\Users\\josea\\Documents\\wordle\\tests\\contexts\\shared\\infrastructure\\MongoClientFactory.test.ts"],"sourcesContent":["import { MongoClientFactory } from '../../../../src/contexts/shared/infrastructure/persistence/mongo/MongoClientFactory'\nimport { MongoClient } from 'mongodb'\n\ndescribe('MongoClientFactory', () => {\n\tconst factory = MongoClientFactory\n\tlet client: MongoClient\n\n\tbeforeEach(async () => {\n\t\tclient = await factory.createClient('test', { url: 'mongodb://localhost:27017/levita-backend-test1' })\n\t})\n\n\tafterEach(async () => {\n\t\tawait client.close()\n\t})\n\n\tit('creates a new client with the connection already established', () => {\n\t\texpect(client).toBeInstanceOf(MongoClient)\n\t})\n\n\tit('creates a new client if it does not exist a client with the given name', async () => {\n\t\tconst newClient = await factory.createClient('test2', { url: 'mongodb://localhost:27017/levita-backend-test2' })\n\n\t\texpect(newClient).not.toBe(client)\n\n\t\tawait newClient.close()\n\t})\n\n\tit('returns a client if it already exists', async () => {\n\t\tconst newClient = await factory.createClient('test', { url: 'mongodb://localhost:27017/levita-backend-test3' })\n\n\t\texpect(newClient).toBe(client)\n\n\t\tawait newClient.close()\n\t})\n})\n"],"version":3}